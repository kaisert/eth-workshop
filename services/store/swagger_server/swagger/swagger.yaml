---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Store Microservice"
tags:
- name: "store"
  description: "Access to Articles"
- name: "user"
  description: "User Handling"
- name: "cart"
  description: "shopping cart"
paths:
  /articles:
    get:
      tags:
      - "store"
      operationId: "get_articles_by_ids"
      produces:
      - "application/json"
      parameters:
      - name: "articleIds"
        in: "query"
        description: "IDs of articles that need to be fetched"
        required: true
        type: "array"
        items:
          type: "integer"
        collectionFormat: "multi"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Articles"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Articel not found"
      x-swagger-router-controller: "swagger_server.controllers.store_controller"
  /articles/{articleId}/buy:
    post:
      tags:
        - "store"
      operationId: "buy_article"
      parameters:
        - name: "articleId"
          in: "path"
          required: true
          type: "integer"
        - name: "quantity"
          in: "query"
          required: true
          type: "integer"
      responses:
        200:
          description: "successful operation"
        404:
          description: "Article not found"
      x-swagger-router-controller: "swagger_server.controllers.store_controller"
  /inventory:
    get:
      tags:
        - "store"
      operationId: "get_inventory"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Articles"
      x-swagger-router-controller: "swagger_server.controllers.store_controller"

  /user:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "create_user"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
  /user/{username}:
    get:
      tags:
        - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "get_user_by_name"
      produces:
        - "application/json"
      parameters:
        - name: "username"
          in: "path"
          description: "The name that needs to be fetched. Use user1 for testing. "
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
    delete:
      tags:
        - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "delete_user"
      produces:
        - "application/json"
      parameters:
        - name: "username"
          in: "path"
          description: "The name that needs to be deleted"
          required: true
          type: "string"
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "swagger_server.controllers.user_controller"
  /cart/{userId}:
    get:
      tags:
        - "cart"
      operationId: "get_cart_by_user_id"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Cart"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Cart not found"
      x-swagger-router-controller: "swagger_server.controllers.cart_controller"
    post:
      tags:
        - "cart"
      operationId: "create_cart_for_user"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Cart not found"
      x-swagger-router-controller: "swagger_server.controllers.cart_controller"
    delete:
      tags:
        - "cart"
      operationId: "empty_cart"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
      x-swagger-router-controller: "swagger_server.controllers.cart_controller"
  /cart/{userId}/checkout:
    post:
      tags:
        - "cart"
      operationId: "checkout_cart"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "swagger_server.controllers.cart_controller"
  /cart/{userId}/article:
    post:
      tags:
        - "cart"
      operationId: "add_article_to_cart"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "item"
        required: true
        schema:
          $ref: "#/definitions/Item"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "swagger_server.controllers.cart_controller"
  /cart/{userId}/article/{articleId}:
    delete:
      tags:
        - "cart"
      operationId: "remove_article_from_cart"
      parameters:
      - name: "userId"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
      - name: "articleId"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "swagger_server.controllers.cart_controller"
definitions:
  Article:
    type: "object"
    properties:
      price:
        type: "number"
      inStorage:
        type: "boolean"
      quantity:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      nextShipDate:
        type: "string"
        format: "date-time"
    example:
      quantity: 6
      price: 0.80082819046101150206595775671303272247314453125
      description: "description"
      id: 1
      inStorage: true
      nextShipDate: "2000-01-23T04:56:07.000+00:00"
  Articles:
    properties:
      articles:
        type: "array"
        items:
          $ref: "#/definitions/Article"
    example:
      articles:
      - quantity: 6
        price: 0.80082819046101150206595775671303272247314453125
        description: "description"
        id: 1
        inStorage: true
        nextShipDate: "2000-01-23T04:56:07.000+00:00"
      - quantity: 6
        price: 0.80082819046101150206595775671303272247314453125
        description: "description"
        id: 1
        inStorage: true
        nextShipDate: "2000-01-23T04:56:07.000+00:00"

  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
    example:
      firstName: "firstName"
      lastName: "lastName"
      password: "password"
      userStatus: 6
      phone: "phone"
      id: 0
      email: "email"
      username: "username"
  Cart:
    type: "object"
    properties:
      articles:
        type: "array"
        items:
          $ref: "#/definitions/Item"
      abandoned:
        type: "boolean"
      complete:
        type: "boolean"
        default: false
    example:
      abandoned: true
      complete: false
      articles:
      - quantity: 0
        articleId: 6
      - quantity: 0
        articleId: 6
  Item:
    type: "object"
    properties:
      quantity:
        type: "integer"
      articleId:
        type: "integer"
    example:
      quantity: 0
      articleId: 6
